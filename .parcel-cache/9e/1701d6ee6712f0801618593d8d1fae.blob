var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _modelJs = require("./model.js");
var _recipeViewJs = require("./views/recipeView.js");
var _recipeViewJsDefault = parcelHelpers.interopDefault(_recipeViewJs);
var _searchViewsJs = require("./views/searchViews.js");
var _searchViewsJsDefault = parcelHelpers.interopDefault(_searchViewsJs);
var _resultsViewJs = require("./views/resultsView.js");
var _resultsViewJsDefault = parcelHelpers.interopDefault(_resultsViewJs);
var _paginationViewJs = require("./views/paginationView.js");
var _paginationViewJsDefault = parcelHelpers.interopDefault(_paginationViewJs);
var _stable = require("core-js/stable");
var _runtime = require("regenerator-runtime/runtime");
if (module.hot) module.hot.accept();
// https://forkify-api.herokuapp.com/v2
///////////////////////////////////////
const controlRecipes = async function() {
    try {
        const id = window.location.hash.slice(1);
        if (!id) return;
        _recipeViewJsDefault.default.renderSpinner();
        // 0. Update results view to mark selected search result
        _resultsViewJsDefault.default.update(_modelJs.getSearchResultsPage());
        // 1. Loading recipe
        await _modelJs.loadRecipe(id);
        // 2. Rendering recipe
        _recipeViewJsDefault.default.render(_modelJs.state.recipe);
    } catch (err) {
        _recipeViewJsDefault.default.renderError();
    }
};
const controlSearchResults = async function() {
    try {
        _resultsViewJsDefault.default.renderSpinner();
        // Get search quert
        const query = _searchViewsJsDefault.default.getQuery();
        if (!query) return;
        // Load search results
        await _modelJs.loadSearchResults(query);
        // Render results
        _resultsViewJsDefault.default.render(_modelJs.getSearchResultsPage());
        // Render initial pagination
        _paginationViewJsDefault.default.render(_modelJs.state.search);
    } catch (err) {
        console.log(err);
    }
};
const controlPagination = function(goToPage) {
    // Render new results
    _resultsViewJsDefault.default.render(_modelJs.getSearchResultsPage(goToPage));
    // Render new pagination buttons
    _paginationViewJsDefault.default.render(_modelJs.state.search);
};
const controlServings = function(newServings) {
    // Update the recipe servings (in state)
    _modelJs.updateServings(newServings);
    // Update the recipe view 
    // recipeView.render(model.state.recipe);
    _recipeViewJsDefault.default.update(_modelJs.state.recipe);
};
const controlAddBookmark = function() {
    if (!_modelJs.state.recipe.bookmarked) _modelJs.addBookmark(_modelJs.state.recipe);
    else _modelJs.deleteBookmark(_modelJs.state.recipe.id);
    console.log(_modelJs.state.recipe);
    _recipeViewJsDefault.default.update(_modelJs.state.recipe);
};
const init = function() {
    _recipeViewJsDefault.default.addHandlerRender(controlRecipes);
    _recipeViewJsDefault.default.addHandlerUpdateServings(controlServings);
    _recipeViewJsDefault.default.addHandlerAddBookmark(controlAddBookmark);
    _searchViewsJsDefault.default.addHandlerSearch(controlSearchResults);
    _paginationViewJsDefault.default.addHandlerClick(controlPagination);
};
init();
